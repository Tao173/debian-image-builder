#!/bin/bash

# rc-local
rc-local_service (){
tee /etc/systemd/system/rc-local.service <<EOF
[Unit]
Description=/etc/rc.local
ConditionPathExists=/etc/rc.local

[Service]
Type=forking
ExecStart=/etc/rc.local start
TimeoutSec=0
StandardOutput=tty
RemainAfterExit=yes
SysVStartPriority=99

[Install]
WantedBy=multi-user.target
EOF

tee /etc/rc.local <<EOF
#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

exit 0
EOF
chmod +x /etc/rc.local
}

# binfmt fixups (bookworm)
binfmt_fixups_service (){
tee /etc/systemd/system/binfmt-fixups.service <<EOF
[Unit]
Description=Systemd Binfmt Fixups
ConditionFileIsExecutable=/usr/local/sbin/systemd-binfmt-fixups
After=rc-local.service

[Service]
Type=forking
ExecStart=/usr/local/sbin/systemd-binfmt-fixups
TimeoutSec=0
RemainAfterExit=yes
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
systemctl enable binfmt-fixups.service
}

# governor
governor_service (){
tee /etc/systemd/system/governor.service <<EOF
[Unit]
Description=Governor
ConditionPathExists=/sys/devices/system/cpu/online
After=rc-local.service

[Service]
ExecStart=/usr/local/bin/governor -r &>/dev/null
Type=oneshot
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF
}

# pine64 bluetooth
pine64_bt_service (){
tee /etc/systemd/system/bthelper.service <<EOF
[Unit]
Description=Bluetooth Helper
ConditionPathExists=/usr/local/sbin/bthelper
After=network.target network-online.target
Before=bluetooth.service

[Service]
Type=forking
ExecStart=/usr/local/sbin/bthelper &>/dev/null

[Install]
WantedBy=multi-user.target
EOF
#systemctl enable bthelper
}

# nanopi bluetooth
nanopi_bt_service (){
tee /etc/systemd/system/bthelper.service <<EOF
[Unit]
Description=Bluetooth Helper
After=network.target network-online.target
Before=bluetooth.service

[Service]
Type=oneshot
ExecStart=/usr/local/sbin/bthelper start &>/dev/null
ExecStop=/usr/local/sbin/bthelper stop &>/dev/null
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF
systemctl enable bthelper
}

# leds
led_service (){
tee /etc/systemd/system/leds.service <<EOF
[Unit]
Description=LEDs
ConditionPathExists=/usr/local/sbin/led-trigger
After=systemd-remount-fs.service sysinit.target local-fs.target
Before=rc-local.service

[Service]
Type=oneshot
RemainAfterExit=yes
ExecStart=/usr/local/sbin/led-trigger &>/dev/null

[Install]
WantedBy=multi-user.target
EOF
systemctl enable leds
}

# tweaks
tweaks_service (){
cd ~
echo "overclock=0" > /etc/opt/overclock.txt
chmod +x /usr/bin/tweaks
chown root:root /usr/bin/tweaks
if [[ "$BOARD" =~ ^(odroidn2|odroidn2l|odroidn2plus)$ ]]; then
	mv -f irq-tweaks /usr/bin/irq-tweaks
	chmod +x /usr/bin/irq-tweaks
	chown root:root /usr/bin/irq-tweaks
fi

bananapi_systemd (){
tee /etc/systemd/system/tweaks.service <<EOF
[Unit]
Description=BananaPi System Tweaks
ConditionFileIsExecutable=/usr/bin/tweaks
After=systemd-remount-fs.service sysinit.target local-fs.target
Before=rc-local.service

[Service]
Type=forking
ExecStart=/usr/bin/tweaks > /dev/null 2>&1
TimeoutSec=0
RemainAfterExit=yes
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
systemctl enable tweaks
}

lepotato_systemd (){
tee /etc/systemd/system/tweaks.service <<EOF
[Unit]
Description=Le Potato System Tweaks
ConditionFileIsExecutable=/usr/bin/tweaks
After=network.target network-online.target ifup@.service

[Service]
Type=forking
ExecStart=/usr/bin/tweaks > /dev/null 2>&1
TimeoutSec=0
RemainAfterExit=yes
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
systemctl enable tweaks
}

odroid_systemd (){
tee /etc/systemd/system/tweaks.service <<EOF
[Unit]
Description=ODROID System Tweaks
ConditionFileIsExecutable=/usr/bin/tweaks
After=network.target network-online.target

[Service]
Type=forking
ExecStart=/usr/bin/tweaks > /dev/null 2>&1
TimeoutSec=0
RemainAfterExit=yes
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
systemctl enable tweaks
if [[ "$BOARD" =~ ^(odroidn2|odroidn2l|odroidn2plus)$ ]]; then
	tee /etc/systemd/system/irq-tweaks.service <<EOF
[Unit]
Description=ODROID IRQ Tweaks
ConditionFileIsExecutable=/usr/bin/irq-tweaks
After=rc-local.service tweaks.service
Before=getty.target

[Service]
Type=simple
ExecStart=/usr/bin/irq-tweaks
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF
	systemctl enable irq-tweaks
fi
}

rockchip_systemd (){
tee /etc/systemd/system/tweaks.service <<EOF
[Unit]
Description=Rockchip System Tweaks
ConditionFileIsExecutable=/usr/bin/tweaks
After=systemd-remount-fs.service sysinit.target local-fs.target
Before=network.target bluetooth.target rc-local.service

[Service]
Type=forking
ExecStart=/usr/bin/tweaks > /dev/null 2>&1
TimeoutSec=0
RemainAfterExit=yes
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
systemctl enable tweaks
}

radxazero_systemd (){
tee /etc/systemd/system/tweaks.service <<EOF
[Unit]
Description=Radxa Zero System Tweaks
ConditionFileIsExecutable=/usr/bin/tweaks
After=systemd-remount-fs.service sysinit.target local-fs.target network.target bluetooth.target

[Service]
Type=forking
ExecStart=/usr/bin/tweaks > /dev/null 2>&1
TimeoutSec=0
RemainAfterExit=yes
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
systemctl enable tweaks
}

nanopi5_systemd (){
tee /etc/systemd/system/tweaks.service <<EOF
[Unit]
Description=NanoPi System Tweaks
ConditionFileIsExecutable=/usr/bin/tweaks
After=systemd-remount-fs.service sysinit.target local-fs.target
Before=network.target

[Service]
Type=forking
ExecStart=/usr/bin/tweaks > /dev/null 2>&1
TimeoutSec=0
RemainAfterExit=yes
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
systemctl enable tweaks
}

cubietruck_systemd (){
tee /etc/systemd/system/tweaks.service <<EOF
[Unit]
Description=Cubietruck System Tweaks
ConditionFileIsExecutable=/usr/bin/tweaks
After=systemd-remount-fs.service sysinit.target local-fs.target
Before=rc-local.service

[Service]
Type=forking
ExecStart=/usr/bin/tweaks > /dev/null 2>&1
TimeoutSec=0
RemainAfterExit=yes
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
systemctl enable tweaks
}

cuboxi_systemd (){
tee /etc/systemd/system/tweaks.service <<EOF
[Unit]
Description=Cubox-i System Tweaks
ConditionFileIsExecutable=/usr/bin/tweaks
After=systemd-remount-fs.service sysinit.target local-fs.target
Before=rc-local.service

[Service]
Type=forking
ExecStart=/usr/bin/tweaks > /dev/null 2>&1
TimeoutSec=0
RemainAfterExit=yes
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
systemctl enable tweaks
}

ac2xx_systemd (){
tee /etc/systemd/system/tweaks.service <<EOF
[Unit]
Description=AC2XX System Tweaks
ConditionFileIsExecutable=/usr/bin/tweaks
After=network.target network-online.target ifup@.service bluetooth.target leds.service

[Service]
Type=forking
ExecStart=/usr/bin/tweaks > /dev/null 2>&1
TimeoutSec=0
RemainAfterExit=yes
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
systemctl enable tweaks
}

orangepi3_systemd (){
tee /etc/systemd/system/tweaks.service <<EOF
[Unit]
Description=OrangePi System Tweaks
ConditionFileIsExecutable=/usr/bin/tweaks
After=systemd-remount-fs.service sysinit.target local-fs.target
Before=rc-local.service

[Service]
Type=forking
ExecStart=/usr/bin/tweaks > /dev/null 2>&1
TimeoutSec=0
RemainAfterExit=yes
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
systemctl enable tweaks

if [[ "$BOARD" == "orangepi3lts" ]]; then
	tee /etc/systemd/system/bthelper.service <<EOF
[Unit]
Description=Bluetooth Helper
After=bluetooth.service

[Service]
Type=simple
ExecStartPre=/usr/sbin/rfkill unblock all
ExecStart=/usr/local/sbin/hciattach_opi -s 1500000 /dev/ttyBT0 sprd > /dev/null 2>&1
TimeoutSec=0
RemainAfterExit=true

[Install]
WantedBy=multi-user.target
EOF
	systemctl enable bthelper
fi
}

restart_tweaks (){
tee /usr/bin/restart-tweaks <<EOF
#!/bin/bash

service tweaks stop
sleep .50
service tweaks start

exit 0
EOF
chmod +x /usr/bin/restart-tweaks
}

if [[ "$DISTRO" == "devuan" ]]; then
	restart_tweaks
	mv -f tweaks.init /etc/init.d/tweaks
	chmod +x /etc/init.d/tweaks
	chown root:root /etc/init.d/tweaks
else
	if [[ "$BOARD" =~ ^(bananapif3)$ ]]; then bananapi_systemd; fi
	if [[ "$BOARD" =~ ^(cubietruck|cuboxi|lepotato|radxazero)$ ]]; then ${BOARD}_systemd; fi
	if [[ "$BOARD" =~ ^(nanopir5c|nanopir5s)$ ]]; then nanopi5_systemd; fi
	if [[ "$BOARD" =~ ^(orangepi3|orangepi3lts)$ ]]; then orangepi3_systemd; fi
	if [[ "$FAMILY_EXT" =~ ^(ac2xx|bananapi|odroid)$ ]]; then ${FAMILY_EXT}_systemd; fi
	if [[ "$FAMILY_EXT" =~ ^(rk3288|rk3328|rk3399)$ ]]; then rockchip_systemd; fi
fi
}

# credentials
credentials_service (){
tee /etc/systemd/system/credentials.service <<EOF
[Unit]
Description=Credentials
After=firstboot.service network.target systemd-remount-fs.service sysinit.target local-fs.target
Before=rc-local.service
ConditionPathExists=/usr/local/bin/credentials

[Service]
Type=oneshot
ExecStart=/usr/local/bin/credentials > /dev/null 2>&1
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF
systemctl enable credentials
}

# first boot
firstboot_service (){
tee /etc/systemd/system/firstboot.service <<EOF
[Unit]
Description=Resize ROOTFS partition
After=systemd-remount-fs.service sysinit.target local-fs.target
ConditionPathExists=/usr/local/sbin/firstboot
DefaultDependencies=no

[Service]
ExecStart=/usr/local/sbin/firstboot
Type=oneshot
RemainAfterExit=no
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
}

kali_services (){
systemctl enable avahi-daemon
systemctl enable bluetooth
systemctl enable ntpsec
systemctl enable ssh
systemctl disable systemd-networkd
systemctl mask systemd-networkd-wait-online
}

enable_sysvinit (){
if [[ -f "/etc/init.d/tweaks" ]]; then
	chmod +x /etc/init.d/tweaks
	update-rc.d tweaks defaults 2
fi
if [[ -f "/usr/local/sbin/led-trigger" ]]; then
	chmod +x /etc/init.d/leds
	update-rc.d leds defaults 2
fi
if [[ "$BOARD" =~ ^(pinea64plus|nanopineoplus2)$ ]]; then
	chmod +x /etc/init.d/bthelper
	update-rc.d bthelper defaults 2
fi
chmod +x /etc/init.d/governor
chmod +x /etc/init.d/firstboot
chmod +x /etc/init.d/credentials
chmod +x /etc/init.d/zramswap
update-rc.d -f hwclock.sh remove
update-rc.d firstboot defaults S
update-rc.d governor defaults 2
update-rc.d zramswap defaults 2
update-rc.d credentials defaults 2
}

enable_systemd (){
systemctl enable rc-local
#systemctl enable ifplugd
if [[ "$DISTRO" =~ ^(debian|kali|raspbian)$ ]]; then systemctl enable resolvconf; fi
systemctl enable zramswap
systemctl enable firstboot
systemctl enable governor
if [[ -f "/etc/systemd/system/multi-user.target.wants/ondemand.service" ]]; then systemctl disable ondemand; fi
if [[ -f "/etc/systemd/system/multi-user.target.wants/ua-auto-attach.service" ]]; then systemctl disable ua-auto-attach; fi
#systemctl enable serial-getty@ttyUSB0.service
}
